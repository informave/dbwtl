#include <dbwtl/dbobjects>
#include <dbwtl/dal/engines/sqlite>
#include <dbwtl/dal/engines/generic>
#include <dbwtl/ustring>

#include "../cxxc.hh"

using namespace informave::db;

struct SqliteMemoryFixture
{
    typedef Database<sqlite> DBMS;

    SqliteMemoryFixture(void)
        : env("sqlite:libsqlite"),
          dbc(env)
    {}

    virtual ~SqliteMemoryFixture(void)
    {}
    
    
    void onSetUp(void)
    {
        dbc.connect(L":memory:");
    }
    
    DBMS::Environment env;
    DBMS::Connection dbc;
};



struct SqliteGenericFixture
{
	typedef Database<generic> DBMS;

	SqliteGenericFixture(void)
		: env("sqlite:libsqlite"),
		dbc(env)
		{}

	virtual ~SqliteGenericFixture(void)
	{}

	void onSetUp(void)
	{
		dbc.connect(":memory:");
	}

	DBMS::Environment env;
	DBMS::Connection dbc;
};



//
// Local Variables:
// mode: C++
// c-file-style: "bsd"
// c-basic-offset: 4
// indent-tabs-mode: nil
// End:
//
