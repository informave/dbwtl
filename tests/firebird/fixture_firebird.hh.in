#include <dbwtl/dbobjects>
#include <dbwtl/dal/engines/firebird>
//#include <dbwtl/dal/engines/generic>
#include <dbwtl/ustring>



#include "../cxxc.hh"




using namespace informave::db;
typedef Database<firebird> DBMS;


struct FirebirdTestbaseFixture
{
    FirebirdTestbaseFixture(void)
        : env("firebird:libfbclient"),
          dbc(env)
    {}
    
    
    void onSetUp(void)
    {
	 dbc.connect("@DBWTL_TESTCONF_FIREBIRD_DATABASE@",
	 	"@DBWTL_TESTCONF_FIREBIRD_USER@",
		"@DBWTL_TESTCONF_FIREBIRD_PW@");
    }
    
   virtual ~FirebirdTestbaseFixture(void) {}

    DBMS::Environment env;
    DBMS::Connection dbc;
};


struct FirebirdTestbaseIso88591Fixture
{
    FirebirdTestbaseIso88591Fixture(void)
        : env("firebird:libfbclient"),
          dbc(env)
    {}


    void onSetUp(void)
    {
	IDbc::Options opts;
	opts["database"] = "@DBWTL_TESTCONF_FIREBIRD_DATABASE@";
	opts["username"] = "@DBWTL_TESTCONF_FIREBIRD_USER@";
	opts["password"] = "@DBWTL_TESTCONF_FIREBIRD_PW@";
         dbc.connect(opts);
    }

   virtual ~FirebirdTestbaseIso88591Fixture(void) {}

    DBMS::Environment env;
    DBMS::Connection dbc;
};



//
// Local Variables:
// mode: C++
// c-file-style: "bsd"
// c-basic-offset: 4
// indent-tabs-mode: nil
// End:
//
